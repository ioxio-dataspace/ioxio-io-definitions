{
  "openapi": "3.1.0",
  "info": {
    "title": "Cargo handling equipment operational status",
    "description": "General operational status data of a cargo handling equipment operating in a port.",
    "version": "0.2.3"
  },
  "paths": {
    "/CargoHandlingEquipment/OperationalStatus_v0.2": {
      "post": {
        "tags": ["Cargo handling equipment", "Freight terminal", "Logistics", "Port"],
        "summary": "Cargo handling equipment operational status",
        "description": "General operational status data of a cargo handling equipment operating in a port.",
        "operationId": "request_CargoHandlingEquipment_OperationalStatus_v0_2",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationalStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationalStatusResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bad_gateway",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Bad Gateway"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BadRequest": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["validation_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Validation failed for fieldName: error description."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadRequest"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["upstream_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": [
              "Failed to connect to the upstream service, please try again later."
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "type": {
            "type": "string",
            "const": "data_source_not_found",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Data source not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "type": {
            "type": "string",
            "const": "does_not_conform_to_definition",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Response from data source does not conform to definition"]
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source",
            "examples": [200]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message", "data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["forbidden"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["No access to requested data for group 'example'."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "type": {
            "type": "string",
            "const": "gateway_timeout",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Gateway Timeout"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Location": {
        "properties": {
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude (°)",
            "description": "The latitude coordinate in decimal degrees.",
            "examples": [60.192059]
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude (°)",
            "description": "The longitude coordinate in decimal degrees.",
            "examples": [24.945831]
          }
        },
        "type": "object",
        "required": ["latitude", "longitude"],
        "title": "Location"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["not_found"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "OperationalState": {
        "type": "string",
        "enum": ["operating", "idle", "charging", "refilling"],
        "title": "OperationalState"
      },
      "OperationalStatusRequest": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 40,
            "title": "ID",
            "description": "The unique identifier of the product.",
            "examples": ["71b51878-8a00-11ee-b9d1-0242ac120002"]
          },
          "time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time",
            "description": "Request the equipment's status information at or before this given time, in RFC 3339 format. If empty, provide latest value.",
            "examples": ["2023-04-12T23:20:50Z"]
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "OperationalStatusRequest"
      },
      "OperationalStatusResponse": {
        "properties": {
          "time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time",
            "description": "The time the status of the equipment was recorded, in RFC 3339 format.",
            "examples": ["2023-04-12T23:20:50Z"]
          },
          "operationalState": {
            "$ref": "#/components/schemas/OperationalState",
            "title": "Operational state",
            "description": "The state of operation.",
            "examples": ["operating"]
          },
          "isLoaded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is loaded",
            "description": "The cargo handling status that shows whether the equipment is loaded or not.",
            "examples": [true]
          },
          "fuelLevel": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuel level (%)",
            "description": "The percent of fuel left as a number value between 0 and 100.",
            "examples": [75.0]
          },
          "gasLevel": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gas level (%)",
            "description": "The percent of gas left as a number value between 0 and 100.",
            "examples": [75.0]
          },
          "chargeLevel": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Charge level (%)",
            "description": "The percent of battery capacity left as a number value between 0 and 100.",
            "examples": [75.0]
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "The location in GPS coordinates."
          }
        },
        "type": "object",
        "required": ["operationalState"],
        "title": "OperationalStatusResponse"
      },
      "RateLimitExceeded": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["rate_limit_exceeded"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Rate limit exceeded"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "ServiceUnavailable": {
        "properties": {
          "type": {
            "type": "string",
            "const": "service_unavailable",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Service Unavailable"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["api_token_missing_or_invalid"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["The API token has expired"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "x-strict-validation": false
}
