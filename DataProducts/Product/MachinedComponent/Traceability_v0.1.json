{
  "openapi": "3.1.0",
  "info": {
    "title": "Machined component traceability",
    "description": "The traceability information of a machined component.",
    "version": "0.1.0"
  },
  "paths": {
    "/Product/MachinedComponent/Traceability_v0.1": {
      "post": {
        "tags": ["Machinery and equipment", "Manufacturing"],
        "summary": "Machined component traceability",
        "description": "The traceability information of a machined component.",
        "operationId": "request_Product_MachinedComponent_Traceability_v0_1",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional consent token",
              "default": "",
              "title": "X-Consent-Token"
            },
            "description": "Optional consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "default": "",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {},
        "type": "object",
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "Blank": {
        "properties": {
          "identifier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "The identifier the blank used for machining the component.",
            "examples": ["st-42crmo4-blt-ht1234-btch5678"]
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "The type of the blank used for machining the component.",
            "examples": ["forging billet"]
          }
        },
        "type": "object",
        "title": "Blank"
      },
      "ComponentIdentification": {
        "properties": {
          "purchaseOrder": {
            "type": "string",
            "maxLength": 40,
            "title": "Purchase order",
            "description": "The number of the purchase order related to the component.",
            "examples": ["2345"]
          },
          "workOrder": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Work order",
            "description": "The number of the manufacturing work order related to the component.",
            "examples": ["wo-2025-0001"]
          },
          "deviationPermit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Deviation permit",
            "description": "The identifier of an approved exception allowing the use of a component that deviates from standard specifications.",
            "examples": ["el-2024-005"]
          },
          "blank": {
            "$ref": "#/components/schemas/Blank",
            "description": "The identification details of the the blank used for machining the component."
          },
          "waybill": {
            "type": "string",
            "maxLength": 40,
            "title": "Waybill",
            "description": "The identifier for the component shipment from the component manufacturer to the customer.",
            "examples": ["1x999aa10123456784"]
          },
          "codeNomenclature": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "pattern": "^\\d{4}(\\d{2}){0,3}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code nomenclature",
            "description": "The number identifying the component type according to EU harmonised system and Council Regulation (EEC) No 2658/87.",
            "examples": ["73269010"]
          }
        },
        "type": "object",
        "required": ["purchaseOrder", "blank", "waybill"],
        "title": "ComponentIdentification"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "type": "object",
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source"
          }
        },
        "type": "object",
        "required": ["data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MachiningCenter": {
        "properties": {
          "identifier": {
            "type": "string",
            "maxLength": 40,
            "title": "Identifier",
            "description": "The identifier of the machining the center.",
            "examples": ["cnc-101"]
          },
          "numericalControlVersion": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Numerical control version",
            "description": "The version of the controller software used by the machining center.",
            "examples": ["nc-v10.3"]
          },
          "routingVersion": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Routing version",
            "description": "The process sequence used for machining the component.",
            "examples": ["r001"]
          },
          "modificationTimestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modification timestamp",
            "description": "The latest timestamp used for updating the process routing in RFC 3339 format.",
            "examples": ["2025-02-06T09:26:52Z"]
          }
        },
        "type": "object",
        "required": ["identifier"],
        "title": "MachiningCenter"
      },
      "ManufacturerInformation": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 250
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The registered trade name of the manufacturer company.",
            "examples": ["Company xyz"]
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "pattern": "^https://"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website",
            "description": "The website of the manufacturer.",
            "examples": ["https://example.com/"]
          }
        },
        "type": "object",
        "title": "ManufacturerInformation"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "RateLimitExceeded": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Rate limit exceeded"
          }
        },
        "type": "object",
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "Request": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 40,
            "title": "ID",
            "description": "The unique identifier of the component.",
            "examples": ["b1a-0723y-00165"]
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "Request"
      },
      "Response": {
        "properties": {
          "componentIdentification": {
            "$ref": "#/components/schemas/ComponentIdentification",
            "title": "Component identification",
            "description": "The identifiers related to the component."
          },
          "manufacturerInformation": {
            "$ref": "#/components/schemas/ManufacturerInformation",
            "title": "Manufacturer information",
            "description": "The details of the component manufacturer."
          },
          "drawingNumber": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Drawing number",
            "description": "The number identifying the component specification drawing.",
            "examples": ["12345"]
          },
          "drawingRevision": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Drawing revision",
            "description": "The version of the component specification drawing.",
            "examples": ["Rev A"]
          },
          "machiningCenters": {
            "items": {
              "$ref": "#/components/schemas/MachiningCenter"
            },
            "type": "array",
            "title": "Machining centers",
            "description": "The details of the equipment used for machining the component."
          }
        },
        "type": "object",
        "required": [
          "componentIdentification",
          "manufacturerInformation",
          "machiningCenters"
        ],
        "title": "Response"
      },
      "ServiceUnavailable": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
