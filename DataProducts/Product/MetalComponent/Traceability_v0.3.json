{
  "openapi": "3.1.0",
  "info": {
    "title": "Metal component traceability information",
    "description": "The traceability information of a metal component.",
    "version": "0.3.2"
  },
  "paths": {
    "/Product/MetalComponent/Traceability_v0.3": {
      "post": {
        "tags": ["Machinery and equipment", "Manufacturing"],
        "summary": "Metal component traceability information",
        "description": "The traceability information of a metal component.",
        "operationId": "request_Product_MetalComponent_Traceability_v0_3",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional consent token",
              "default": "",
              "title": "X-Consent-Token"
            },
            "description": "Optional consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "default": "",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bad_gateway",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Bad Gateway"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BadRequest": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["validation_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Validation failed for fieldName: error description."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadRequest"
      },
      "Blank": {
        "properties": {
          "identifier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "The identifier of the blank used for machining the component.",
            "examples": ["st-42crmo4-blt-ht1234-btch5678"]
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "The type of the blank used for machining the component.",
            "examples": ["forging billet"]
          }
        },
        "type": "object",
        "title": "Blank"
      },
      "CompanyIdentification": {
        "properties": {
          "identifierScheme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyIdentifierScheme"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier scheme",
            "description": "The identification scheme in use for the company. ",
            "examples": ["gln"]
          },
          "identifier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "The identification number according to the selected scheme.",
            "examples": ["1234567890123"]
          }
        },
        "type": "object",
        "title": "CompanyIdentification"
      },
      "CompanyIdentifierScheme": {
        "type": "string",
        "enum": ["gln", "nationalBusinessId", "duns"],
        "title": "CompanyIdentifierScheme"
      },
      "ComponentIdentification": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 150,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the component."
          },
          "subComponentDeclaration": {
            "items": {
              "$ref": "#/components/schemas/SubComponent"
            },
            "type": "array",
            "title": "Sub component declaration",
            "description": "List of declared subcomponents used in the component assembly."
          },
          "purchaseOrder": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase order",
            "description": "The number of the purchase order related to the component.",
            "examples": ["2345"]
          },
          "workOrder": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Work order",
            "description": "The number of the manufacturing work order related to the component.",
            "examples": ["wo-2025-0001"]
          },
          "shipmentId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipment ID",
            "description": "A unique identifier representing the release of goods from a location as part of a specific delivery or shipment.",
            "examples": ["19910123456784"]
          },
          "blanks": {
            "items": {
              "$ref": "#/components/schemas/Blank"
            },
            "type": "array",
            "title": "Blanks",
            "description": "The identification details of the the blanks used for manufacturing the component."
          },
          "codeNomenclature": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Code nomenclature",
            "description": "The number identifying the component type according to EU harmonised system and Council Regulation (EEC) No 2658/87.",
            "examples": ["73269010"]
          },
          "drawingNumber": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Drawing number",
            "description": "The number identifying the component specification drawing.",
            "examples": ["12345"]
          },
          "drawingRevision": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Drawing revision",
            "description": "The version of the component specification drawing.",
            "examples": ["Rev A"]
          }
        },
        "type": "object",
        "required": ["subComponentDeclaration", "blanks"],
        "title": "ComponentIdentification"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["upstream_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": [
              "Failed to connect to the upstream service, please try again later."
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "type": {
            "type": "string",
            "const": "data_source_not_found",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Data source not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "type": {
            "type": "string",
            "const": "does_not_conform_to_definition",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Response from data source does not conform to definition"]
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source",
            "examples": [200]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message", "data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["forbidden"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["No access to requested data for group 'example'."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "type": {
            "type": "string",
            "const": "gateway_timeout",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Gateway Timeout"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ManufacturerInformation": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The registered trade name of the manufacturer company.",
            "examples": ["Company xyz"]
          },
          "identification": {
            "$ref": "#/components/schemas/CompanyIdentification",
            "title": "Identification",
            "description": "The identification of the company responsible for manufacturing the component. "
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 250,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "The address of the manufacturing site.",
            "examples": ["Rue des Lilas 12, 1050 Bruxelles, Belgium"]
          },
          "contactEmail": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact email",
            "description": "The designated email contact for inquiries related to component manufacturing.",
            "examples": ["contact@company.com"]
          }
        },
        "type": "object",
        "required": ["identification"],
        "title": "ManufacturerInformation"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["not_found"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "ProcessIdentification": {
        "properties": {
          "identifier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "A unique identifier for the full sequence of manufacturing steps applied to a metal component or batch, including forming, cutting, machining, surface treatment, and related processes.",
            "examples": ["procset-metal-2024-0458"]
          }
        },
        "type": "object",
        "title": "ProcessIdentification"
      },
      "QueryLevel": {
        "type": "string",
        "enum": ["batch", "item"],
        "title": "QueryLevel"
      },
      "RateLimitExceeded": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["rate_limit_exceeded"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Rate limit exceeded"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "Request": {
        "properties": {
          "product": {
            "type": "string",
            "maxLength": 150,
            "minLength": 0,
            "title": "Product",
            "description": "The product code used for identifying the product model.",
            "examples": ["product-modelX-1234"]
          },
          "queryLevel": {
            "$ref": "#/components/schemas/QueryLevel",
            "title": "Query level",
            "description": "The query level used to define the product's traceability information.",
            "examples": ["batch"]
          },
          "id": {
            "type": "string",
            "maxLength": 40,
            "minLength": 0,
            "title": "ID",
            "description": "The batch identifier is used when querying on the batch level. The unique item identifier is used when querying on the product item level.",
            "examples": ["batch-12345"]
          }
        },
        "type": "object",
        "required": ["product", "queryLevel", "id"],
        "title": "Request"
      },
      "Response": {
        "properties": {
          "manufacturingDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manufacturing date",
            "description": "The manufacturing date of the product batch or item. ",
            "examples": ["2025-02-06"]
          },
          "deliveryDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery date",
            "description": "The recorded date on which the component was shipped or handed over for delivery.",
            "examples": ["2025-03-07"]
          },
          "componentIdentification": {
            "$ref": "#/components/schemas/ComponentIdentification",
            "title": "Component identification",
            "description": "The identifiers related to the component."
          },
          "manufacturerInformation": {
            "$ref": "#/components/schemas/ManufacturerInformation",
            "title": "Manufacturer information",
            "description": "The details of the component manufacturer."
          },
          "processIdentification": {
            "$ref": "#/components/schemas/ProcessIdentification",
            "title": "Process identification"
          }
        },
        "type": "object",
        "required": [
          "componentIdentification",
          "manufacturerInformation",
          "processIdentification"
        ],
        "title": "Response"
      },
      "ServiceUnavailable": {
        "properties": {
          "type": {
            "type": "string",
            "const": "service_unavailable",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Service Unavailable"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "SubComponent": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 150,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the subcomponent.",
            "examples": ["metal fastener"]
          },
          "identifier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "The identifier of the subcomponent either on a batch or item level.",
            "examples": ["batch-2024-ssbolt-0037"]
          }
        },
        "type": "object",
        "title": "SubComponent"
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["api_token_missing_or_invalid"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["The API token has expired"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "x-strict-validation": false
}
