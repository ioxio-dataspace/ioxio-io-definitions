{
  "openapi": "3.1.0",
  "info": {
    "title": "Vehicle turnaround times",
    "description": "Turnaround times of vehicles within a facility.",
    "version": "0.3.2"
  },
  "paths": {
    "/Transport/Vehicle/TurnaroundTimes_v0.3": {
      "post": {
        "tags": ["Logistics"],
        "summary": "Vehicle turnaround times",
        "description": "Turnaround times of vehicles within a facility.",
        "operationId": "request_Transport_Vehicle_TurnaroundTimes_v0_3",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurnaroundTimeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurnaroundTimeResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bad_gateway",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Bad Gateway"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BadRequest": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["validation_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Validation failed for fieldName: error description."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "BadRequest"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["upstream_error"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": [
              "Failed to connect to the upstream service, please try again later."
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "type": {
            "type": "string",
            "const": "data_source_not_found",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Data source not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "type": {
            "type": "string",
            "const": "does_not_conform_to_definition",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Response from data source does not conform to definition"]
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source",
            "examples": [200]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message", "data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["forbidden"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["No access to requested data for group 'example'."]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "type": {
            "type": "string",
            "const": "gateway_timeout",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Gateway Timeout"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["not_found"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Not found"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "RateLimitExceeded": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["rate_limit_exceeded"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Rate limit exceeded"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "ServiceUnavailable": {
        "properties": {
          "type": {
            "type": "string",
            "const": "service_unavailable",
            "title": "Error type",
            "description": "An identifier for the type of error."
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["Service Unavailable"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "TurnaroundTime": {
        "properties": {
          "vehicleId": {
            "type": "string",
            "maxLength": 128,
            "title": "Vehicle identifier",
            "description": "Licence plate number or similar identification number of the vehicle.",
            "examples": ["ABC-123"]
          },
          "vehicleType": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle type",
            "description": "The type of the vehicle.",
            "examples": ["truck"]
          },
          "entryTime": {
            "type": "string",
            "format": "date-time",
            "title": "Entry time",
            "description": "The time when the vehicle entered the facility.",
            "examples": ["2023-04-12T22:20:50Z"]
          },
          "leaveTime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Leave time",
            "description": "The time when the vehicle left the facility.",
            "examples": ["2023-04-12T23:20:50Z"]
          },
          "turnaroundTime": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Turnaround time (s)",
            "description": "Turnaround time of the vehicle in seconds.",
            "examples": [3600]
          }
        },
        "type": "object",
        "required": ["vehicleId", "entryTime"],
        "title": "TurnaroundTime"
      },
      "TurnaroundTimeRequest": {
        "properties": {
          "locationId": {
            "type": "string",
            "maxLength": 40,
            "title": "Location identifier",
            "description": "Location identification number based on UN/LOCODE, or other similar identification number of the transport location or facility.",
            "examples": ["FI OUL"]
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "title": "Start time",
            "description": "The start time of the time range to get turnaround times for, in RFC 3339 format.",
            "examples": ["2023-04-12T23:20:50Z"]
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "title": "End time",
            "description": "The end time of the time range to get turnaround times for, in RFC 3339 format.",
            "examples": ["2023-05-12T23:20:50Z"]
          }
        },
        "type": "object",
        "required": ["locationId", "startTime", "endTime"],
        "title": "TurnaroundTimeRequest"
      },
      "TurnaroundTimeResponse": {
        "properties": {
          "turnaroundTimes": {
            "items": {
              "$ref": "#/components/schemas/TurnaroundTime"
            },
            "type": "array",
            "title": "Turnaround times",
            "description": "The list of turnaround times of vehicles within the facility."
          }
        },
        "type": "object",
        "required": ["turnaroundTimes"],
        "title": "TurnaroundTimeResponse"
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "description": "An identifier for the type of error.",
            "examples": ["api_token_missing_or_invalid"]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "A human readable description of the error.",
            "examples": ["The API token has expired"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "x-strict-validation": false
}
